<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <Nullable>disable</Nullable>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <SpaProxyServerUrl>https://localhost:44452</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
      <UserSecretsId>a5447e0f-87ac-4a91-aeb7-f3c26533328e</UserSecretsId>
      <LangVersion>11</LangVersion>
  </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AutoMapper" Version="13.0.1" />
        <PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="11.9.0" />
        <PackageReference Include="MediatR" Version="12.2.0" />
        <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.22.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="8.0.2" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="8.0.2" />
        <PackageReference Include="OpenIddict.AspNetCore" Version="5.2.0" />
        <PackageReference Include="OpenIddict.EntityFrameworkCore" Version="5.2.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="..\.dockerignore">
          <Link>.dockerignore</Link>
        </Content>
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
        <Folder Include="ClientApp\src\app\game\game-resistance\resistance-game\world\pieces\missions\mission-results\" />
        <Folder Include="ClientApp\src\app\shared\custom-validators\the-resistance-game" />
        <Folder Include="ClientApp\src\app\shared\services\state\" />
        <Folder Include="ClientApp\src\assets\loaders\" />
        <Folder Include="ClientApp\src\assets\models" />
        <Folder Include="ClientApp\src\assets\textures\ResistanceGame\" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\TheResistanceOnline.Authentications\TheResistanceOnline.Authentications.csproj" />
        <ProjectReference Include="..\TheResistanceOnline.Common\TheResistanceOnline.Common.csproj" />
        <ProjectReference Include="..\TheResistanceOnline.Data\TheResistanceOnline.Data.csproj" />
        <ProjectReference Include="..\TheResistanceOnline.Users\TheResistanceOnline.Users.csproj" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="Users\Error.cshtml" />
      <_ContentIncludedByDefault Remove="Users\_ViewImports.cshtml" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install --force" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --prod" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>
